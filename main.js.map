{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/weather.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,sBAAsB,oBAAoB,KAAK,UAAU,2BAA2B,sBAAsB,KAAK,+CAA+C,uY;;;;;;;;;;;ACA9J,84BAA84B,cAAc,kCAAkC,mBAAmB,uMAAuM,cAAc,oCAAoC,mBAAmB,2IAA2I,qCAAqC,cAAc,oCAAoC,mBAAmB,iLAAiL,cAAc,oCAAoC,mBAAmB,uUAAuU,cAAc,wCAAwC,mBAAmB,yCAAyC,gCAAgC,gRAAgR,cAAc,0CAA0C,mBAAmB,2CAA2C,gCAAgC,oRAAoR,cAAc,0CAA0C,mBAAmB,2CAA2C,gCAAgC,uF;;;;;;;;;;;;;;;;;;ACA/7F;AACU;AAO5D;IAKE,sBAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAFlD,YAAO,GAAG,SAAS,CAAC;QACb,UAAK,GAAG,EAAE,CAAE;IACmC,CAAC;IAEvD,+BAAQ,GAAR;QACE,IAAI,CAAE,OAAO,EAAE,CAAC;IAClB,CAAC;IAGD,iCAAU,GAAV,UAAW,QAAgB;QAA3B,iBAaC;QAZC,IAAI,CAAC,cAAc;aAChB,UAAU,CAAC,QAAQ,CAAE;aACrB,SAAS,CACR,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,OAAO,GAAE,GAAG,CAAC;QAEpB,CAAC,EACD,aAAG;YACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACN,CAAC;IAED,qCAAc,GAAd,UAAe,QAA0B;QAEvC,IAAI,QAAQ,CAAC,KAAK,EAAG;YACnB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEhC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;SAErB;aAEI;YACH,KAAK,CAAC,4BAA4B,CAAC,CAAC;SACrC;QACD,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,8BAAO,GAAP;QACE,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE;YACzB,UAAU;YACX,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAEvB;aAAM;YACH,YAAY;YACb,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SACzB;IACD,CAAC;IArDU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAMoC,wEAAc;OALvC,YAAY,CAuDxB;IAAD,mBAAC;CAAA;AAvDwB;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACe;AAET;AACa;AACmB;AAE/E,mBAAmB;AACiF;AACvD;AAqB7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QApBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,4FAAuB;gBACvB,0DAAW;gBACX,gEAAc;gBACd,iEAAe;gBACf,iEAAe;gBACf,+DAAa;aAEd;YACD,SAAS,EAAE;gBACT,wEAAc;aACf;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;AC/BqB;AACO;AAKlD;IAKE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,WAAM,GAAW,kCAAkC,CAAC;QACpD,QAAG,GAAW,EAAE,CAAC;QAGf,IAAI,CAAC,GAAG,GAAG,2DAAyD,IAAI,CAAC,MAAM,qBAAkB,CAAC;IACpG,CAAC;IAED,mCAAU,GAAV,UAAW,QAAgB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,IAAI,CAAC,GAAG,GAAG,QAAU,CAAC,CAAC;IACjD,CAAC;IACD,oCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,KAAG,IAAI,CAAC,GAAK,CAAC,CAAC;IAC7C,CAAC;IAdU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU;OALzB,cAAc,CAe1B;IAAD,qBAAC;CAAA;AAf0B;;;;;;;;;;;;;ACN3B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAC6B;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"img{\\r\\n    width:300px;\\r\\n}\\r\\n.cont{\\r\\n    position: relative;\\r\\npadding-top: 10em;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QixpQkFBaUI7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltZ3tcclxuICAgIHdpZHRoOjMwMHB4O1xyXG59XHJcbi5jb250e1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5wYWRkaW5nLXRvcDogMTBlbTtcclxufSJdfQ== */\"","module.exports = \"\\n<div class=\\\"container cont\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card card-body\\\">\\n        <img src=\\\"../assets/img/logo.png\\\" alt=\\\"500\\\" class=\\\"m-auto\\\">\\n      </div>\\n    </div> \\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card card-body\\\">\\n        \\n        <form (submit)=\\\"submitLocation(cityName)\\\">\\n          <input type=\\\"text\\\" placeholder=\\\"City Name\\\" class=\\\"form-control\\\" autofocus #cityName>\\n          \\n          <button class=\\\"btn btn-primary btn-block mt-2\\\">\\n            Ok\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <!--  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12  \\\">\\n      <div *ngIf=\\\"weather.main.temp > 16\\\" class=\\\"card card-body text-center\\\">\\n        <h1 class=\\\"h4\\\">Information</h1>\\n        <p>Frio hace</p>\\n        <p>City: {{weather.name}}</p> \\n        <p>Temperature:  {{weather.main.temp}} °C</p>\\n      </div>\\n      </div>\\n    </div>-->\\n\\n  <!--\\n  <div class=\\\"row\\\">\\n      \\n      \\n      <ng-template  [ngIf]=\\\"weather.main.temp < 10\\\" [ngIfElse]=\\\"case2\\\">\\n          <p>City: {{weather.name}}</p> \\n          <p>Temperature:  {{weather.main.temp}} °C</p>\\n          <p>Frio</p>\\n      </ng-template>\\n      <ng-template #case2 [ngIf]=\\\"weather.main.temp  <=11 && weather.main.temp >=25; else case3\\\">\\n          <p>City: {{weather.name}}</p> \\n          <p>Temperature:  {{weather.main.temp}} °C</p>\\n          <p>Buena condición</p>\\n      </ng-template> \\n      <ng-template #case3 [ngIf]=\\\"weather.main.temp  <=26 && weather.main.temp >=35\\\" >\\n          <p>City: {{weather.name}}</p> \\n          <p>Temperature:  {{weather.main.temp}} °C</p>\\n          <p>Caluroso</p>\\n      </ng-template> \\n\\n    </div>-->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 \\\">\\n            <div *ngIf=\\\"weather.main.temp < 10\\\" class=\\\"card card-body text-center\\\">\\n              <h1 class=\\\"h4\\\">Information</h1>\\n              <p>Frio</p>\\n              <p>City: {{weather.name}}</p> \\n              <p>Temperature:  {{weather.main.temp}} °C</p>\\n              <p>Description: {{weather.weather[0].description}}</p>\\n              \\n            </div>\\n            <div *ngIf=\\\"weather.main.temp >= 10 && weather.main.temp <= 23\\\" class=\\\"card card-body text-center\\\">\\n                <h1 class=\\\"h4\\\">Information</h1>\\n                <p>Buen clima</p>\\n                <p>City: {{weather.name}}</p> \\n                <p>Temperature:  {{weather.main.temp}} °C</p>\\n                <p>Description: {{weather.weather[0].description}}</p>\\n                \\n              </div>\\n              <div *ngIf=\\\"weather.main.temp >= 24 && weather.main.temp <= 35\\\" class=\\\"card card-body text-center\\\">\\n                <h1 class=\\\"h4\\\">Information</h1>\\n                <p>Caluroso</p>\\n                <p>City: {{weather.name}}</p> \\n                <p>Temperature:  {{weather.main.temp}} °C</p>\\n                <p>Description: {{weather.weather[0].description}}</p>\\n              \\n              </div>\\n            </div>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './services/weather.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n\n  \n  weather = undefined;\n  public clima = [] ;\n  constructor(private weatherService: WeatherService) { }\n\n  ngOnInit() {\n    this. getHora();\n  }\n  \n\n  getWeather(cityName: string) {\n    this.weatherService\n      .getWeather(cityName )\n      .subscribe(\n        res => {\n          console.log(res);\n          this.weather =res;\n          \n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  submitLocation(cityName: HTMLInputElement) {\n   \n    if (cityName.value ) {\n      this.getWeather(cityName.value);\n\n      cityName.value = '';\n      \n    }\n    \n    else {\n      alert('Please. Insert some values');\n    }\n    cityName.focus();\n    return false;\n  }\n  getHora(){\n    const date = new Date();\n    const hour = date.getHours();\n    if (hour > 6 && hour < 20) {\n      //Day time\n     console.table(\"day\");\n  \n  } else {\n      //Night time\n     console.table(\"night\");\n  }\n  }\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { WeatherService } from './services/weather.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n//angular material \nimport { MatInputModule, MatButtonModule, MatSelectModule, MatIconModule } from '@angular/material';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,  \n    FormsModule,    \n    MatInputModule, \n    MatButtonModule,\n    MatSelectModule,\n    MatIconModule,\n   \n  ],\n  providers: [\n    WeatherService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  apiKey: string = 'fe3b709abf1bcbaa011ce9e667ec6c3c';\n  URI: string = '';\n\n  constructor(private http: HttpClient) {\n    this.URI = `https://api.openweathermap.org/data/2.5/weather?appid=${this.apiKey}&units=metric&q=`;\n  }\n\n  getWeather(cityName: string) {\n    return this.http.get(`${this.URI}${cityName}`);\n  }\n  getWeathers() {\n    return this.http.get<any[]>(`${this.URI}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}